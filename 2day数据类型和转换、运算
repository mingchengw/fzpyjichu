#2-1

#容器类数据  str  盛水的，装东西的。。。
#其他数据类型转换为列表
#int float bool complex str
#字符串转换成列表，把字符串里的每一个字符当作列表里的每一个元素
'''
int1 = "hello world"
list1 = list(int1)
print(list1)
'''
#元组tuple转换成列表,数据不变，格式改变
'''
tuple1 = (1,2,3)
print(tuple1,type(tuple1))
list1 = list(tuple1)
print(list1,type(list1))
'''
#集合转换成列表，去重，随机排序
'''
set1 = {"你好","妇女节","再见","女生节","妇女节"}
print(set1,type(set1))
list1 = list(set1)
print(list1,type(list1))
'''

#dict字典转换成列表 ，保留字典中的键作为列表里的元素
dict1 = {"小学生":"哥哥给把枪","高中生":"放荡不羁爱自由","大学生":"浪上天","毕业了":"佛系"}
list1 = list(dict1)
print(list1)

#2-1wp
##字符串转换成列表，把字符串里的每一个字符当作列表里的每一个元素
# int1 = 'hello'
# L1 = list(int1)
# print(L)

##元组tuple转换成列表,数据不变，格式改变
# T = (1,2,3)
# print(T,type(T))
# L2 = list(T)
# print(L2,type(L2))

# #集合转换成列表，去重，随机排序
# set1 ={"你好","妇女节","再见","泼水节","妇女节"}
# print(set1,type(set1))
# L3 = list(set1)
# print(L3,type(L3))


#dict字典转换成列表 ，保留字典中的键作为列表里的元素
dict1 = {"诸葛亮":"法师","赵云":"打野","鲁班":"射手"}
L4 = list(dict1)
print(L4)






#2-2
#其他数据类型转换为tuple元组() 元组里面的元素（数据）是不可改的
#字符串转换为元组,字符串转换成元组，把字符串里的每一个字符当作元组里的每一个元素
'''
str1 = "今天是国际三八妇女节，为啥没三八男神节"
tuple1 = tuple(str1)
print(tuple1,type(tuple1))
'''
#列表转换成元组,就是改变了数据类型而已
'''
list1 = ["王继欣","王海明","王迅"]
tuple1 = tuple(list1)
print(tuple1,type(tuple1))
'''
#集合转换成元组，去重后随即排序
'''
set1 = {"小明","小黄","小黑","小花","小明"}
tuple1 = tuple(set1)
print(tuple1,type(tuple1))
'''
#字典转换成元组，保留字典中的键作为元组里的每一个元素
dict1 = {"601":"python大神","613":"兄弟连教师","xdl":"老师都很帅"}
print(type(dict1))
tuple1 = tuple(dict1)
print(tuple1,type(tuple1))

#2-2wp
# #字符串转换为元组,字符串转换成元组，把字符串里的每一个字符当作元组里的每一个元素
# str1 = "今天是国际三八妇女节，为啥没三八男神节"
# T1 = tuple(str1)
# print(T1,type(T1))

# #列表转换成元组,就是改变了数据类型而已
# L1 = ['一','二','三']
# T2 = tuple(L1)
# print(T2,type(T2))

# #集合转换成元组，去重后随即排序
# set1 = {"小明","小黄","小黑","小花","小明"}
# T3 = tuple(set1)
# print(T3,type(T3))

#字典转换成元组，保留字典中的键作为元组里的每一个元素
dict1 = {"601":"python大神","613":"兄弟连教师","xdl":"老师都很帅"}
print(type(dict1))
T4 = tuple(dict1)
print(T4,type(T4))





#2-3
#其他数据类型转换成集合
#字符串转换成集合,把字符串里的每一个元素去重随机排序作为集合里的每一个元素
'''
str1 = "hello world"
set1 = set(str1)
print(set1,type(set1))
'''
#list转换为集合 去重随机排序
'''
list1 = ["python","java","php","h5","java"]
set1 = set(list1)
print(set1,type(set1))
'''
#元组转换成集合，去重随机排序
'''
tuple1 = ("金刚","不坏","狼","狼")
set1 = set(tuple1)
print(set1,type(set1))
'''
#字典键是唯一的，转换成集合后顺序随机
dict1 = {"601":"python大神","613":"兄弟连教师","xdl":"老师都很帅","602":"python大神"}
print(dict1)
set1 = set(dict1)
print(set1,type(set1))

#2-3wp
# #字符串转换成集合,把字符串里的每一个元素去重随机排序作为集合里的每一个元素
# str1 = "hello"
# S1 = set(str1)
# print(S1,type(S1))

# #list转换为集合 去重随机排序
# L1 = ["python","java","php","h5","java"]
# S1 = set(L1)
# print(S1,type(S1))

# #元组转换成集合，去重随机排序
# T1 = ("金刚","不坏","狼","狼")
# S2 = set(T1)
# print(S2,type(S2))

#字典键是唯一的，转换成集合后顺序随机
dict1 ={"601":"python大神","613":"兄弟连教师","xdl":"老师都很帅","602":"python大神"}
print(dict1)
S3 = set(dict1)
print(S3,type(S3))





#2-4
#其他数据类型转换成字典
'''
str1 = ""
dict1 = dict(str1)
print(type(dict1))
'''
#l列表转换成字典，如果要有意义，则必须是二级的列表，并且第二级里面必须只有两个元素才可以

# list1 = [["红人","小花"],("小明","大红花")]
# dict1 = dict(list1)
# print(dict1,type(dict1))

#元组转换成字典
# tuple1 = (("你好","他是"),["今日","说法"])
# dict1 = dict(tuple1)
# print(dict1,type(dict1))

#集合转换成字典,必须是二级类容器，并且第二级的容器要是元组类型且只能有两个元素
set1 = {("和","小明去玩耍")}
dict1 = dict(set1)
print(dict1,type(dict1))


#2-4wp
#其他数据类型转换成字典

# str1 = ""
# dict1 = dict(str1)
# print(type(dict1))

# #l列表转换成字典，如果要有意义，则必须是二级的列表，并且第二级里面必须只有两个元素才可以
# L1 = [["红人","小花"],("小明","大红花")]
# dict1 = dict(L1)
# print(dict1,type(dict1))

# # 元组转换成字典
# T1 = (("你好","他是"),["今日","说法"])
# dict1 = dict(T1)
# print(dict1,type(dict1))

#集合转换成字典,必须是二级类容器，并且第二级的容器要是元组类型且只能有两个元素
S1 = {("和","小明去玩耍")}
dict1 = dict(S1)
print(dict1,type(dict1))






#2-5
#运算和运算符
#算术运算
# + - * /
# + 法运算
# num1 = 2
# num2 = 3
# print(num1+num2)
#减法运算
# num1 = 2
# num2 = 3
# print(num1 - num2)
#乘法运算
# num1 = 2
# num2 = 3
# print(num1 * num2)
#除法运算
# num1 = 2
# num2 = 3
# print(num1 / num2)

#幂运算
# num1 = 2
# num2 = 4
# print(num1 ** num2) #num1 的 num2  次幂

#地板除 （取商数）
# num1 = 3
# num2 = 2
# print(num1 // num2)

#取余运算符
# num1 = 8
# num2 = 3
# print(num1 % num2)






#2-6
#比较运算符（常用于判断） 得到的结果是bool值
# >  <  >=  <=   ==  !=
#大于比较
# num1 = 1
# num2 = 2
# result = num1 > num2
# print(result)

#小于比较
# num1 = 1
# num2 = 2
# result = num1 < num2
# print(result)

#大于等于
# num1 = 7
# num2 = 2
# result = num1 >= num2
# print(result)

#小于等于
# num1 = 2
# num2 = 2
# result = num1 <= num2
# print(result)

# ==
# num1 = ["你好"]
# num2 = ["你好"]
# result = num1 != num2
# print(result)

#!=
num1 = ["你好","世界"]
num2 = ["你好"]
result = num1 != num2
print(result)




#2-7
#赋值运算
# = += -= /= //= **=
#赋值 =
# num1 = 2

# +=
# num1 = 2
# num1 += 6 # num1 = num1 + 6
# print(num1)

# -=
# num1 = 2
# num1 -= 3 # num1 = num1 - 3
# print(num1)

#/=
# num1 = 2
# num1 /= 3 #num1 = num1 / 3
# print(num1)

# *=
# num1 = 2
# num1 *= 5 # num1 = num1 * 5
# print(num1)

# **=
# num1 = 2
# # num1 **= 6 #num1 = num1 ** 6
# # print(num1)

# //=
# num1 = 3
# num1 //= 8 #num1 = num1 // 8
# print(num1)

# %=
# num1 = 8
# num1 %= 3 #num1 = num1 % 2
# print(num1)


#2-8
#逻辑运算（布尔值之间的运算） 与或非
#逻辑与运算 and   有假则假
# result = True and False
# print(result)

#逻辑或运算 or 有真则真
# result = True or False
# print(result)

#逻辑非运算  变性 真变假，假变真
result = not False
print(result)





#2-9
#进制转换
#  0b 二进制转换成10进制
# num1 = 0b1001
# print(int(num1))

#推算过程
# 1*2^0 + 0*2^1 +0*2^2 +1*2^3
# 1 + 0 + 0 + 8 = 9

#0x 十六进制
# num1 = 0x966
# print(int(num1))
#966 十六进制
# 9*16^2 + 6*16^1  +6 * 16^0
# 2304 + 96 + 6

#八进制
# num1 = 0o77
# print(int(num1))
#7 * 8 ^1 + 7 * 8^0
#56 + 7 = 63

#其他数据类型转成2进制
#十进制转成2进制
# num1 = 2
# print(bin(num1))

#八进制转成2进制
# num1 = 0o71
# print(bin(num1))

#十六进制转成2进制
# num1 = 0xa5
# print(bin(num1))

#拿1 和负一举例
# 1 + (-1)
#原码         #反码                #补码
# 0 00000001    0 00000001           0 00000001
# 1 00000001    1 11111110           1 11111111
#                             0000 000000 0 00000

#反码正数的反码与原码一致，正数的补码与原码一致  # 21
#原码 就是 二进制数    正数原码，反码，补码是一样  0  00000010101 （正数）
#负数  原码也是二进制数                           1  00000010101 （负数）
# 反码                                           1  11111101010  （负数的反码）
# 补码                                           1  11111101011  （负数的补码）



#2-9wp
#进制转换
#  0b 二进制转换成10进制
# num1 = 0b1101
# print(int(num1))

#推算过程
# 1       0      1      1
# 1*2^0 + 0*2^1 +1*2^2 +1*2^3
# 1 + 0 + 4 + 8 = 9

# #0x 十六进制
# num1 = 0x966
# print(int(num1))
#966 十六进制
# 9*16^2 + 6*16^1  +6 * 16^0
# 2304 + 96 + 6


#八进制
# num1 = 0o76
# print(int(num1))
#7 * 8 ^1 + 6 * 8^0
#56 + 6 = 62


#其他数据类型转成2进制
#十进制转成2进制
# num1 = 2
# print(bin(num1))

#八进制转成2进制
# num1 = 0o71
# print(bin(num1))

#十六进制转成2进制
# num1 = 0xa5
# print(bin(num1))




#2-10
#位运算
#按位与运算
# num1 = 2
# num2 = 3
# print(num1 & num2)
# 0000010
# 0000011
# 0000010

#按位或运算 |
# num1 = 2
# num2 = 3
# print(num1 | num2)
# 0000010    2
# 0000011    3
# 0000011    结果

#按位非运算
# print(~-1)  #取相反数后减1
# print(~-6)
# print(~-9)
#0 0000111
#1 1111000
#1 0000111
#1 0001000

#按位异或运算
# num1 = 7
# num2 = 5
# print(num1 ^ num2)
#0 0000111
#0 0000101
#0 0000010

#左移运算
# num1 = 7
# num2 = 5
# print(num1 << num2)
#0 0000111
#0 11100000

#右移运算
# num1 = 15
# num2 = 3
# print(num1 >> num2)
#   0000 000001





#2-10wp
# #位运算
# num1 = 2
# num2 = 3
# #& 按位与运算符：参与运算的两个值,如果两个相应位都为1,则该位的结果为1,否则为0
# print(num1 & num2)
# #\ 按位或运算符：只要对应的二个二进位有一个为1时，结果位就为1。
# print(num1 | num2)

# #按位非运算
# #~ 按位取反运算符：对数据的每个二进制位取反
# print(~-1)  #取相反数后减1
# print(~-6)
# print(~-9)
# print(~0)
# print(~1)

#按位异或运算
#^ 按位异或运算符：当两对应的二进位相异时，结果为1
# n1 = 7
# print(bin(n1))
# n2 = 5
# print(bin(n2))
# print(bin(n1 ^ n2))
# print(n1 ^ n2)


# #例2
# num3 = 3
# print(bin(num3))
# print(num3)
#
# num4 = 6
# print(bin(num4))
# print(num4)
#
# print(bin(num3 ^ num4))
# print(num3 ^ num4)


# #例3
# n5 = 10
# print(n5)
# print(bin(n5))
#
# n6 = 5
# print(n6)
# print(bin(n6))
#
# print(n5^n6)
# print(bin(n5^n6))


# #左移运算
# num1 = 7
# num2 = 5
# print(num1 << num2)
# # 0 0000111
# # 0 11100000
# n3 = 1
# n4 = 3
# print(n3 << n4)
# # 1
# # 1000

#右移运算
num1 = 8
num2 = 3
print(num1 >> num2)
# 1000
# 1



#2-11
#身份运算 is is not
num1 = 1
num2 = 1
# print(id(num1))
# print(id(num2))
# str1 = "hello world"
# str2 = "hello world"
# print(id(str1))
# print(id(str2))
# result = str1 is str2
# print(result)

#is not 检测
# str1 = "hello worl"
# str2 = "hello world"
# print(id(str1))
# print(id(str2))
# result = str1 is not str2
# print(result)

#成员检测 in not in
#检测成员是否在字符串是以字符串是否是连续的为依据的
# str1 = "今天是国际女王节"
# result = "hh" not in str1
# print(result)

#list
# list1 = ["你好",["天天","hello"],"田亮","芯蕊"]
# result = ["天天","hello"] in list1
# print(result)

#字典  只检测字典的键
dict1 = {"你好":"吴亦凡","我叫":"李雪秦","你看着灯":"亮不亮"}
result = "吴亦凡" in dict1
print(result)










